buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}
apply plugin: 'com.android.application'

repositories{
    mavenCentral()
}
configurations {
    compile.exclude module: 'stax'
    compile.exclude module: 'stax-api'
    compile.exclude module: 'xpp3'
}
dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.google.android.gms:play-services:6.5.+"
    compile "com.actionbarsherlock:actionbarsherlock:4.4.0@aar"
    compile "com.android.support:support-v4:18.0.+"
    compile "de.greenrobot:greendao:1.3.7"
    compile "de.greenrobot:greendao-generator:1.3.1"
//    compile "org.slf4j:slf4j-api:1.7.1"
    compile 'org.osmdroid:osmdroid-android:4.2'
    compile 'org.slf4j:slf4j-simple:1.6.1'
    compile 'org.codehaus.jettison:jettison:1.3'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile "commons-io:commons-io:+"

}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.0"
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'src-dao-gen', "src-network", "src-pim"]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')


        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}
//task baseJar(type: Jar) {
//    manifest {
//        attributes 'Implementation-Title': 'ARLearn base code'
//
//    }
//    baseName = project.name + '-base'
//
//
//
//
//}
version = '1.0'

//task baseJar(type: Jar) {
//    manifest {
//        attributes 'Implementation-Title': 'ARlearn base files',
//                'Implementation-Version': version
//    }
//    baseName = project.name + '-base'
//    from android.sourceSets.main.output
//
//
//}

task clearJar(type: Delete) {
    delete 'build/outputs/ProjectName.jar'
}

task baseJar(type: Copy) {
    from('build/intermediates/classes/release/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', 'ProjectName.jar')
}

baseJar.dependsOn(clearJar, build)